initSidebarItems({"enum":[["BindExpr","A `BindExpr` is what appears on the left hand of the assignment in a Holmes rule where clause. It describes how to extend or limit the answer set based on the value on the right side."],["Expr","`Expr` represents the right hand side of the where clause sublanguage of Holmes."],["MatchExpr","A `MatchExpr` represents the possible things that could show up in a slot in the body of a rule"]],"struct":[["Clause","A `Clause` to be matched against, as you would see in the body of a datalog rule."],["Fact","A `Fact` is a particular filling of a `Predicate`'s slots such that it is considered true."],["Field","Field for use in a predicate The name is for use in selective matching or unordered definition, and the description is to improve readability of code and comprehension of results. The `Type` is the only required component of a field, as it defines how to actually interact with the field."],["Func","A `Func` is the wrapper around dynamically typed functions which may be registered with the engine to provide extralogical functionality."],["Predicate","A `Predicate` is a name combined with a list of typed slots, e.g."],["Rule","A `Rule` represents a complete inference technique in the Holmes system If the `body` clauses match, the `wheres` clauses are run on the answer set, producing a new answer set, and the `head` clause is instantiated at that answer set and inserted into the database."],["WhereClause","A `WhereClause` is a single assignment in the Holmes sublanguage. The right hand side is evaluated, and bound to the left hand side, producing a new answer set."]],"type":[["Var","`Var` is placeholder type for the representation of a variable in the Holmes langauge. At the moment, it is just an index, and so is transparently an integer, but this behavior should not be relied upon, as it is likely that in the future it will carry other information (name, type, etc.) for improved debugging."]]});
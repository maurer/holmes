initSidebarItems({"enum":[["ErrorKind","The kind of an error."]],"mod":[["dyn","This module provides extensible, dynamically typed persistable values for use in the Holmes language and postgres db. TODO put a demo on custom types in here"]],"struct":[["Error","The Error type."],["PgDB","Object representing a postgres-backed fact database instance"],["Query","A prepared query within a transaction. This abstraction is primarily to satisfy lifetime bounds during a lazy query."],["QueryIter","A lazy query in the process of running. This iterator yields the result rows, one at a time, as vectors of values labeled with fact IDs used as a source for them."],["RowIter","An iterator over a `postgres::rows::Row`. It does not implement the normal iter interface because it does not have a set item type, but it implements a similar interface for ease of use."]],"trait":[["ResultExt","Additional methods for `Result`, for easy interaction with this crate."]],"type":[["FactId","FactId is intended as a database-wide identifier for a fact - they are unique across tables and are intended for caching already run rules and recording providence."],["Result","Convenient wrapper around `std::Result`."]]});